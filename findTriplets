import java.util.Arrays;
import java.util.SortedMap;

public class Solution {
	
	
	/**1.	2.	Given an array of distinct elements. The task is to find triplets in the array whose sum is zero.
	Examples: Input: arr[] = {0, -1, 2, -3, 1}
	Output: (0 -1 1), (2 -3 1)
	Explanation: The triplets with zero sum are 0 + -1 + 1 = 0 and 2 + -3 + 1 = 0  

	Input: arr[] = {1, -2, 1, 0, 5}
	Output: 1 -2  1
	Explanation: The triplets with zero sum is 1 + -2 + 1 = 0   

	**/
	public static void main(String[] args) {
		
		int[] arr = {1, -2, 1, 0, 5};
		int x=110;
		//int[] arr = {400};
		System.out.println(findTriplets(arr));
		
	}
	
	public static int findTriplets(int arr[])
    {
		int found=0;
		Arrays.sort(arr);
		
		for(int k=0;k<arr.length-2;k++)
		{
			
			int i=k+1;
			int j=arr.length-1;
			while (i<j)
			{
				if(arr[k]+arr[i]+arr[j]==0)
				{
					System.out.println(arr[k]+","+arr[i]+","+arr[j]);
					return 1;
				}
				else if (arr[k]+arr[i]+arr[j]>0)
					j--;
				else 
					i++;
			}
		}
		
		return found;
    }
	
	
	
}
