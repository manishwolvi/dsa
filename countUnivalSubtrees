/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    static int count=0;
    public int countUnivalSubtrees(TreeNode root) {
         count=0;
         helper(root);
         return count;
    }

    public static boolean helper(TreeNode root)
	{
        if(root==null)
            return true;

        boolean l = helper(root.left);
        boolean r = helper(root.right);
		
		if(l && r)
		{
            if(root.left!=null && root.left.val!=root.val)
                return false;
            
            if(root.right!=null && root.right.val!=root.val)
                return false;

            count++;
            return true;
		}

        return false;
	}
}
