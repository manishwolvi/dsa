/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode head, ListNode head2) {
        
		
        if(head == null)return head2;
        if(head2 == null)return head;

		int len=getLength(head);
		int len2=getLength(head2);
		
		if(len<len2)
        {
			while(len<len2)
			{
				head2=head2.next;
				len++;
			}
        }
		
		if(len2<len)
        {
			while(len2<len)
			{
				head=head.next;
				len2++;
			}
        }
		
		while (head!=head2)
		{
			
			head=head.next;
			head2=head2.next;		
			
		}
		
		
		return head;
    }

    public static int getLength(ListNode head) {
	        int count = 0;
	        ListNode current = head;
	        while (current != null) {
	            count++;
	            current = current.next;
	        }
	        return count;
	    }
}
