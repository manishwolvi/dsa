import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.SortedMap;

public class Solution {



	public static void main(String[] args) {

		/*
		 * 3.	Given a schedule containing the arrival and departure time of trains in a station, find the minimum number of platforms needed to avoid delay in any trainâ€™s arrival.
		Example: Trains arrival    = { 2.00, 2.10, 3.00, 3.20, 3.50, 5.00 }
		Trains departure              = { 2.30, 3.40, 3.20, 4.30, 4.00, 5.20 }
 
		The minimum platforms needed is 2

		 * 
		 */
		
		double[] arr = {2.00, 2.10, 3.00, 3.20, 3.50, 5.00};
		double[] depart = {2.30, 3.40, 3.20, 4.30, 4.00, 5.20};
		
		
		System.out.println(findMinPlatforms(arr, depart));

	}
	
	
	public static int findMinPlatforms(double[] arr, double[] depart)
	{
		int i=0;
		int j=0;
		int count=0;
		int plat=0;
		
		Arrays.sort(arr);
		Arrays.sort(depart);
		
		while (i < arr.length)
		{
			if(arr[i] <= depart[j])
			{
				count++;
				plat=Math.max(plat, count);
				i++;
			}
			else
			{
				count--;
				j++;
			}
			
			
		}
		return plat;
		
	}
	


	
	 
	 
	
}
