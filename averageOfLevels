/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
         if (root == null)
            return new ArrayList<>();

        Queue<TreeNode> q = new LinkedList<>();
        List<Double> res = new ArrayList<>();

        // Enqueue Root
        q.offer(root);
        int currLevel = 0;

        while(!q.isEmpty())
        {
            int len = q.size();
            double sum=0;
            for(int i=0;i<len;i++)
            {
                TreeNode node = q.poll();
                
                sum=sum+node.val;

                if(node.left!=null)
                    q.offer(node.left);

                if(node.right!=null)
                    q.offer(node.right);
            }
            res.add(sum/len);
            currLevel++;
        }

        return res;
    
    }
}
