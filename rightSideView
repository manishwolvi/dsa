/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {

        

       if (root == null)
           return new ArrayList<>();

       Queue<TreeNode> q = new LinkedList<>();
       List<Integer> res = new ArrayList<>();

       // Enqueue Root
       q.offer(root);
       int currLevel = 0;

       while(!q.isEmpty())
       {
           int len = q.size();
           q.peek();
           
           for(int i=0;i<len;i++)
           {
               TreeNode node = q.poll();
               
               if(i==0)
            	   res.add(node.val);

              

               if(node.right!=null)
                   q.offer(node.right);
               
               if(node.left!=null)
                   q.offer(node.left);
           }
           currLevel++;
       }

       return res;
   
		
    
    }
}
