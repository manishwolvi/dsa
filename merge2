import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.SortedMap;

public class Solution {



	public static void main(String[] args) {

		/*
		 * 2.	Given two sorted arrays, X[] and Y[] of size m and n each, merge elements of X[] with elements of array Y[] by maintaining the sorted order, i.e., fill X[] with the first m smallest elements and fill Y[] with remaining elements.

			Input:
			X[] = { 1, 4, 7, 8, 10 }
			Y[] = { 2, 3, 9 }
			 
			Output:
			X[] = { 1, 2, 3, 4, 7 }
			Y[] = { 8, 9, 10 }

		 */
		
		int[] arr1 = {1,3,5,7,9};
		int[] arr2 = {2,4,6};
		
		//sorty(arr2);
		merge(arr1,arr2);

	}
	
	
	public static void merge(int[] arr1, int[] arr2)
	{
		int i=0, j=0;
		
		for (i=0; i < arr1.length;i++)
		{
			if(arr1[i]>arr2[j])
			{
				//swap i and j
				int tmp=arr1[i];
				arr1[i]=arr2[j];
				arr2[j]=tmp;
				int y=arr2[0];
				int k=0;
				for( k=1;k<arr2.length ;k++)
				{
					if(y>arr2[k])
						arr2[k-1]=arr2[k];
					else {
						arr2[i-1]=y;
						break;
					}	
				}
				
					arr2[k-1]=y;
				
			}
			
		}
		
		System.out.println(Arrays.toString(arr1));
		System.out.println(Arrays.toString(arr2));
	}

	public static int[] sorty(int[] arr)
	{
		
		int y=arr[0];
		int i=0;
		for( i=1;i<arr.length ;i++)
		{
			if(y>arr[i])
				arr[i-1]=arr[i];
			else {
				arr[i-1]=y;
				break;
			}	
		}
		if(i==arr.length)
			arr[i-1]=y;
		//System.out.println(Arrays.toString(arr));
		return arr;
		
	}
	 
	 
	
}
